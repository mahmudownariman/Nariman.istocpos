<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>